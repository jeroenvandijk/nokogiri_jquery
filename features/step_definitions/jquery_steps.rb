Given /^I have a html page$/ do
  visit "/jquery.html"
end

Then /^I should get the same results using JQuery and Nokogiri for selector "([^\"]*)"$/ do |selector|
  jquery = jquery_dom(selector)
  if jquery.empty? && selector =~ /:empty$/
    raise "The JQuery result was empty. Test $(\"#{selector}\") in the browser at http://localhost:3000/jquery.html"
  end
  # puts %{var dom = $("#{selector}").wrap('<div></div>').parent().html(); $('body').empty().append(dom)}
  nokogiri_dom(selector).should == jquery
end

def nokogiri_doc
  Nokogiri::HTML(open(File.expand_path(File.dirname(__FILE__) + "/../../public/jquery.html")))
end

def nokogiri_dom(selector)
  nokogiri_doc.css(selector).first.to_html
end

# Returns the dom found by JQuery
def jquery_dom(selector)
  # We need to do some hacks to get the results from JQuery without too much dependency on Nokogiri.
  # The body is replaced with the selected dom (through javascript)
  # The dom is then extracted using a simple xpath selector (not the removal of some whitespace generated by JQuery)
  browser.execute(%{var dom = $("#{selector}").wrap('<div></div>').parent().html(); $('body').empty().append(dom)})
  browser.send(:respond!)
  jquery_dom = Nokogiri::HTML(browser.html).xpath('/html/body/*[1]').to_html.gsub(/\n {1,}/, '')
end